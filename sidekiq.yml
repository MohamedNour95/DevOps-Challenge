apiVersion: apps/v1
kind: Deployment
metadata:
  name: sidekiq
  labels:
    app: sidekiq  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sidekiq  
  template:
    metadata:      
      labels:
        app: sidekiq
    spec:
      containers:
      - args:
        - bundle
        - exec
        - sidekiq
        env:
        - name: CACHE_URL
          valueFrom:
            configMapKeyRef:
              key: CACHE_URL
              name: env
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              key: DATABASE_URL
              name: env
        - name: GROUP_ID
          valueFrom:
            configMapKeyRef:
              key: GROUP_ID
              name: env
        - name: JOB_WORKER_URL
          valueFrom:
            configMapKeyRef:
              key: JOB_WORKER_URL
              name: env
        - name: LISTEN_ON
          valueFrom:
            configMapKeyRef:
              key: LISTEN_ON
              name: env
        - name: SECRET_TOKEN
          valueFrom:
            configMapKeyRef:
              key: SECRET_TOKEN
              name: env
        - name: USER_ID
          valueFrom:
            configMapKeyRef:
              key: USER_ID
              name: env
        - name: WORKER_PROCESSES
          valueFrom:
            configMapKeyRef:
              key: WORKER_PROCESSES
              name: env
        image: sidekiq
        imagePullPolicy: ""
        name: sidekiq
        resources:
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null

---

#hasn't a service